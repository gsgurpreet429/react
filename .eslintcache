[{"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\MenuComponent.js":"1","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\HeaderComponent.js":"2","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\MainComponent.js":"3","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\DishDetail.js":"4","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\ContactComponent.js":"5","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\AboutComponent.js":"6","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\index.js":"7","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\HomeComponent.js":"8","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\shared\\comments.js":"9","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\shared\\promotions.js":"10","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\shared\\dishes.js":"11","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\shared\\leaders.js":"12","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\FooterComponent.js":"13","C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\reportWebVitals.js":"14"},{"size":1349,"mtime":1613729632555,"results":"15","hashOfConfig":"16"},{"size":6041,"mtime":1614089961227,"results":"17","hashOfConfig":"16"},{"size":2267,"mtime":1613734563397,"results":"18","hashOfConfig":"16"},{"size":2568,"mtime":1613730959429,"results":"19","hashOfConfig":"16"},{"size":9979,"mtime":1613884665430,"results":"20","hashOfConfig":"16"},{"size":4366,"mtime":1613771876167,"results":"21","hashOfConfig":"16"},{"size":643,"mtime":1613722740250,"results":"22","hashOfConfig":"16"},{"size":1140,"mtime":1613727665624,"results":"23","hashOfConfig":"16"},{"size":4926,"mtime":1613726494662,"results":"24","hashOfConfig":"16"},{"size":457,"mtime":1613726505173,"results":"25","hashOfConfig":"16"},{"size":1614,"mtime":1613726388356,"results":"26","hashOfConfig":"16"},{"size":2432,"mtime":1613726487869,"results":"27","hashOfConfig":"16"},{"size":2801,"mtime":1613723439996,"results":"28","hashOfConfig":"16"},{"size":362,"mtime":1611141786722,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gd71op",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\MainComponent.js",[],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\DishDetail.js",[],["61","62"],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\ContactComponent.js",["63"],"import React, { Component } from 'react';\r\nimport { BreadcrumbItem, Breadcrumb, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel ',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n\r\n            }\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handlelInputChange = this.handlelInputChange.bind(this)\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    handlelInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.setState.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email) {\r\n        const error = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if (this.state.touched.firstname && firstname.length < 3)\r\n            error.firstname = 'First name should be >= 3 character';\r\n        else if (this.state.touched.firstname && firstname.length > 10)\r\n            error.firstname = 'First name should be <= 10 character';\r\n        if (this.state.touched.lastname && lastname.length < 3)\r\n            error.lastname = 'Last name should be >= 3 character';\r\n        else if (this.state.touched.lastname && lastname.length > 10)\r\n            error.lastname = 'Last name should be <= 10 character';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            error.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            error.email = 'Email should contain a @';\r\n        return error;\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(\"Cureent state is: \" + JSON.stringify(this.state));\r\n        alert(\"Cureent state is: \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"firstname\" md={2}>Frist Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" value={this.state.firstname} valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''} onBlur={this.handleBlur('firstname')} onChange={this.handlelInputChange} />\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"lasttname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lasttname\" name=\"lastname\" placeholder=\"Last Name\" value={this.state.lastname} valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''} onBlur={this.handleBlur('lastname')} onChange={this.handlelInputChange} />\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        value={this.state.telnum}\r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''} onBlur={this.handleBlur('telnum')} onChange={this.handlelInputChange} />\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email} valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''} onBlur={this.handleBlur('email')} onChange={this.handlelInputChange} />\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{ size: 3, offset: 2 }}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" name=\"agree\" checked={this.state.agree} onChange={this.handlelInputChange} />{' '}<strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                        value={this.state.contactType} onChange={this.handlelInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.message} onChange={this.handlelInputChange}\r\n                                    ></Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;",["64","65"],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\index.js",[],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\Gurpreet Singh\\Desktop\\React\\confusion\\src\\reportWebVitals.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":111,"column":29,"nodeType":"72","endLine":111,"endColumn":71},{"ruleId":"66","replacedBy":"73"},{"ruleId":"68","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["75"],["76"],"no-global-assign","no-unsafe-negation"]